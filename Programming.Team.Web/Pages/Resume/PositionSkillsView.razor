@inherits ReactiveComponentBase<PositionSkillsViewModel>
@attribute [Authorize]
@if (ViewModel != null)
{
    <AlertView Alert="ViewModel.Alert" />
    <MudButton OnClick="ViewModel.StartAdd.BindCommand<MouseEventArgs>()" Class="fw-bold" Variant="Variant.Filled"
        Color="Color.Primary">Add Skill</MudButton>
    <AddPositionSkillView ViewModel="ViewModel.AddViewModel" />
    <MudStack Row="true" Wrap="Wrap.Wrap">
        @foreach (var e in ViewModel.Entities)
        {
            <PositionSkillView ViewModel="e" />
        }
    </MudStack>
}

@code {
    protected override void OnInitialized()
    {
        if (ViewModel != null)
            ViewModel.Entities.CollectionChanged += (s, e) =>
            {
                InvokeAsync(StateHasChanged);
            };
        base.OnInitialized();
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (ViewModel != null && firstRender)
        {
            await ViewModel.Load.Execute().GetAwaiter();

        }
        await base.OnAfterRenderAsync(firstRender);
    }
}
