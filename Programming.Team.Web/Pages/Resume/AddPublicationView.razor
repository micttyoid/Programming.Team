@inherits ReactiveComponentBase<AddPublicationViewModel>
@if (ViewModel != null)
{
    <AlertView Alert="ViewModel.Alert" />
    <MudPopover Open="ViewModel.IsOpen" Fixed="true" Class="px-4 pt-4">
        <div class="d-flex flex-column">
            <MudStack>
                <MudTextField @bind-Value="ViewModel.Title" Label="Title" Variant="Variant.Outlined" />
                <MudTextField @bind-Value="ViewModel.Description" Label="Description" Variant="Variant.Outlined"
                    Lines="10" />
                <MudTextField @bind-Value="ViewModel.Url" Label="URL" Variant="Variant.Outlined" />
                <MudDatePicker @bind-Date="ViewModel.PublishDateTime" Label="Publish Date"
                    MinDate="new DateTime(1950, 1, 1)" />
                <MudStack Row="true">
                    <MudButton OnClick="ViewModel.Add.BindCommand<MouseEventArgs>()" Class="fw-bold"
                        Variant="Variant.Filled" Color="Color.Primary">
                        Add Publication</MudButton>
                    <MudButton OnClick="ViewModel.Cancel.BindCommand<MouseEventArgs>()" Class="fw-bold"
                        Variant="Variant.Filled" Color="Color.Primary">
                        Cancel</MudButton>
                </MudStack>
            </MudStack>
        </div>
    </MudPopover>
}

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && ViewModel != null)
            await ViewModel.Init.Execute().GetAwaiter();
        await base.OnAfterRenderAsync(firstRender);
    }
}
